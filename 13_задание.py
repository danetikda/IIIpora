#13 задание егэ по информатике
#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, 
#какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу узла в этой сети. 
# Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#Сеть задана IP-адресом 192.168.32.160 и маской сети 255.255.255.240. Сколько в этой сети IP-адресов, для которых сумма единиц в двоичной записи IP-адреса чётна?

#В ответе укажите только число.

from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

k=0

net = ip_network('192.168.32.160/255.255.255.240', 0)

for ip in net:
    if F(ip).count('1')%2==0:
        k += 1

print(k)



#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая – к адресу узла в этой сети. Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.

#Сеть задана IP-адресом 253.112.169.12 и маской сети 255.255.254.0. 
# Сколько в этой сети IP-адресов, для которых в двоичной записи IP-адреса
#  суммарное количество единиц в правых двух байтах не менее суммарного количества единиц в левых двух байтах.

from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

k=0

net = ip_network('253.112.169.12/255.255.254.0', 0)

for ip in net:
    s = F(ip)
    if s[:16].count('1') <= s[16:].count('1'):
        k += 1

print(k)

#Задача (Минимальный байт маски)
#В терминологии сетей TCP/IP маской сети называется двоичное число, определяющее, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая - к адресу самого узла в этой сети. Обычно маска записывается по теме же правилам, что и IP-адрес - в виде четырёх байтов,
#  причём каждый байт записывается в виде десятичного числа. При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого разряда - нули. 
# Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
#Например, если IP-адрес узла равен 231.32.255.131, а маска равна 255.255.240.0, то адрес сети равен 231.32. 240.0.
#Для узла с IP-адресом 111.81.88.168 адрес сети равен 111.81.88.160.
#Найдите наименьшее значение последнего байта маски. Ответ запишите в виде десятичного числа.

from ipaddress import *

ip = ip_address('111.81.88.168')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        print(net, net.netmask)


#Задача (Максимальное количество единиц в маске)
#В терминологии сетей TCP/IP маской сети называется двоичное число, определяющее, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая – к адресу самого узла в этой сети. При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места – нули. 
# Обычно маска записывается по тем же правилам, что и IP-адрес – в виде четырёх байтов, причём каждый байт записывается в виде десятичного числа.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.

#Например, если IP-адрес узла равен 231.32.255.131, а маска равна 255.255.240.0, то адрес сети равен 231.32.240.0.
#Для узла с IP-адресом 93.138.70.47 адрес сети равен 93.138.64.0. 
# Каково наибольшее возможное общее количество единиц во всех четырёх байтах маски? Ответ запишите в виде десятичного числа.
from ipaddress import *

ip = ip_address('93.138.70.47')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        print(net)

#Задача (Количество адресов компьютеров)
#В терминологии сетей TCP/IP маской подсети называется 32-разрядное двоичное число, определяющее, какие именно разряды IP-адреса компьютера
#  являются общими для всей подсети – в этих разрядах маски стоит 1. Обычно маски записываются в виде четверки десятичных чисел – по тем же правилам, что и IP-адреса. 
#Для некоторой подсети используется маска 255.255.248.0. 
# Сколько различных адресов компьютеров допускает эта маска?
from ipaddress import *
net = ip_network('0.0.0.0/255.255.248.0')
print(net.num_addresses - 2)

#Задача (Количество масок)
#В терминологии сетей TCP/IP маска сети – это двоичное число, меньшее 232; в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места нули. 
# Маска определяет, какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу самого узла в этой сети.
#  Обычно маска записывается по тем же правилам, что и IP-адрес – в виде четырёх байт, причём каждый байт записывается в виде десятичного числа.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
#Для узла c IP-адресом 175.122.80.13 адрес подсети равен 175.122.80.0. 
#Сколько существует различных возможных значений маски, если известно, что в этой сети не менее 60 узлов? Ответ запишите в виде десятичного числа.
from ipaddress import *

ip = ip_address('175.122.80.13')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        print(net)
#or 
from ipaddress import *

ip = ip_address('175.122.80.13')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        if net.num_addresses - 2 >= 60:
            print(net)

#Задача (Порядковый номер компьютера)
#Маской подсети называется 32-разрядное двоичное число, которое определяет, какая часть IP-адреса компьютера относится к адресу сети, а какая часть IP-адреса определяет адрес компьютера в подсети. 
# В маске подсети старшие биты, отведенные в IP-адресе компьютера для адреса сети, имеют значение 1; младшие биты, отведенные в IP-адресе компьютера для
# адреса компьютера в подсети, имеют значение 0.

#Если маска подсети 255.255.255.224 и IP-адрес компьютера в сети 162.198.0.157, то порядковый номер компьютера в сети равен_____
#Решение:
#В этой задаче ключевой фразой является: "порядковый номер компьютера". Нужно знать, как решать данную тренировочную задачу из ЕГЭ по информатике.

#Первые 3 слева байты маски равны 255 (111111112), значит, они не участвуют в решении этой задачи.

#Мы фокусируем внимание на том байте IP-адреса, под которым байт маски имеет не все единицы в своих разрядах.

##Переведём числа 224 и 157 в двоичную систему.

#Число 224 в двоичной системе равно 111000002.

#Число 157 в двоичной системе равно 100111012.

#Запишем друг под другом данные числа в двоичной системе

#ЕГЭ по информатике - Задание 13 (Порядковый номер компьютера)

#Выписываем ту часть IP-адреса, которая находится над нулями.

#Нужно перевести это двоичное число 111012 в десятичную систему, это и будет ответ. Получается число 29

#Примечание:
#Предположим IP адрес будет 162.198.157.10, а маска подсети 255.255.224.0, тогда запишем байты IP-адреса, а под ними байты маски:

#10011101 00001010
#11100000 00000000
#о берём всё равно ту часть ip-адреса, которая находится над нулями! Не ограничиваемся 8-ю разрядами!
#11101000010102 = 7434
#Данную задачу лучше решать вручную без использования ipaddress.

#Задача (Параметр A в маске)
#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети, 
# а какая – к адресу узла в этой сети. 
#Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.

#Сеть задана IP-адресом 255.211.33.160 и маской сети 255.255.A.0, где A - некоторое допустимое для записи маски число. 
# Определите минимальное значение A, для которого для всех IP-адресов этой сети в двоичной записи IP-адреса суммарное количество единиц в левых двух байтах не менее 
# суммарного количества единиц в правых двух байтах.
from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

for i in range(9):

    A_bin = i * '1'

    while len(A_bin)<8:
        A_bin = A_bin + '0'

    A = int(A_bin, 2)
    
    net = ip_network(f'255.211.33.160/255.255.{A}.0', 0) #Заменять тут ответ будет первое число
    flag = 1
    for ip in net:
        s = F(ip)
        if s[:16].count('1') < s[16:].count('1'):
            flag=0
            break
    if flag==1:
        print(A)


#Задача (Параметр A в IP-адресе)
#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, 
##какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу узла в этой сети. 
#Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#Сеть задана IP-адресом 32.0.A.5, где A - некоторое допустимое для записи IP-адреса число, и маской сети 255.255.240.0. Определите минимальное значение A, 
# для которого для всех IP-адресов
#этой сети в двоичной записи IP-адреса суммарное количество единиц в левых двух байтах не более суммарного количества единиц в правых двух байтах.

from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

for A in range(256):
    
    net = ip_network(f'32.0.{A}.5/255.255.240.0', 0) #Заменять тут
    flag = 1
    for ip in net:
        s = F(ip)
        if s[:16].count('1') > s[16:].count('1'):
            flag=0
            break
    if flag==1:
        print(A)
        break
#Ещё одна такакя задача
def count_ones(ip):
    binary_ip = ''.join(format(int(octet), '08b') for octet in ip.split('.'))
    return binary_ip.count('1')

def find_min_a():
    a = 0
    while True:
        ip = f'192.214.{a}.184'
        mask = '255.255.255.224'
        network = '.'.join(str(int(ip_octet) & int(mask_octet)) for ip_octet, mask_octet in zip(ip.split('.'), mask.split('.')))
        if count_ones(network) > 15:
            return a
        a += 1

print(find_min_a())



#По заданным IP-адресу узла сети и маске определите адрес сети:
# IP-адрес: 135.12.171.214
# Маска: 255.255.248.0
# При записи ответа выберите из приведенных в таблице чисел 4 фрагмента четыре элемента IP-адреса и запишите в нужном порядке соответствующие им буквы без точек.

from ipaddress import *

print(ip_network('135.12.171.214/255.255.248.0', False))


# Для узла с IP-адресом 98.162.71.123 адрес сети равен 98.162.71.96. Чему равен последний (самый правый) байт маски? Ответ запишите в виде десятичного числа.
for m in range(33):
    net = ip_network(f'98.162.71.123/{m}', 0)
    if '98.162.71.96' in str(net):
        print(net.netmask)


#Для узла с IP-адресом 119.167.50.77 адрес сети равен 119.167.48.0. 
# Чему равно наименьшее возможное значение третьего слева байта маски? Ответ запишите в виде десятичного числа.

from ipaddress import *

for m in range(33):
    net = ip_network(f'119.167.50.77/{m}', 0)
    if '119.167.48.0' in str(net):
        print(net.netmask)
        break


#Для узла с IP-адресом 215.181.200.27 адрес сети равен 215.181.192.0.
#  Чему равно наибольшее возможное значение третьего слева байта маски? 
# Ответ запишите в виде десятичного числа.


from ipaddress import *
for m in range(32, -1, -1):
    net = ip_network(f'215.181.200.27/{m}', 0)
    if '215.181.192.0' in str(net):
        print(net.netmask)

#Для узла с IP-адресом 93.138.70.47 адрес сети равен 93.138.64.0. 
# Каково наименьшее возможное общее количество единиц во всех четырёх байтах маски?
#  Ответ запишите в виде десятичного числа.

from ipaddress import *

for m in range(33):
    net = ip_network(f'93.138.70.47/{m}', 0)
    if '93.138.64.0' in str(net):
        print(m) #наименьшее возможное общее количество единиц
        break

#(М. Ишимов) В терминологии сетей ТСР/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая - к адресу узла в этой сети. Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#Для узла с IP-адресом 193.22.209.132 адрес сети равен 193.22.209.128. Каково наименьшее возможное количество нулей в двоичной записи маски?

from ipaddress import *
for m in range(32, -1,-1):
    net = ip_network(f'193.22.209.132/{m}', 0)
    if '193.22.209.128' in str(net):
        print(32-m) #наименьшее возможное количество нулей
        break



#Два узла, находящиеся в одной сети, имеют IP-адреса 115.127.30.120 и 115.127.151.120.
#  Укажите наибольшее возможное значение третьего слева байта маски сети. Ответ запишите в виде десятичного числа.

from ipaddress import *
for m in range(32, -1, -1):
    net = ip_network(f'115.127.30.120/{m}', 0)
    net2 = ip_network(f'115.127.151.120/{m}', 0)
    if str(net) == str(net2):
        print(net.netmask)
        break


#Узлы с IP-адресами 98.162.71.151 и 98.162.71.155 находятся в одной сети. Чему равно наибольшее количество возможных единиц в маске этой сети?

from ipaddress import *

for m in range(32, -1, -1):
    net = ip_network(f'98.162.71.151/{m}', 0)
    net2 = ip_network(f'98.162.71.155/{m}', 0)
    if str(net) == str(net2):
        print(m)
        break


#Два узла, находящиеся в разных подсетях, имеют IP-адреса 10.96.180.231 и 10.96.140.118. 
# В масках обеих подсетей одинаковое количество единиц. 
# Найдите наибольшее возможное количество нулей в двоичной записи маски подсет
from ipaddress import *

for m in range(33):
    net = ip_network(f'10.96.180.231/{m}', 0)
    net2 = ip_network(f'10.96.140.118/{m}', 0)
    if str(net) != str(net2):
        print(32-m)
        break

## В терминологии сетей ТСР/IP маской подсети называется 32-разрядное двоичное число, определяющее, 
# какие именно разряды IP-адреса компьютера являются общими для всей подсети, - в этих разрядах маски стоит 1. 
# Обычно маски записываются в виде четверки десятичных чисел - по тем же правилам, что и IP-адреса. Для некоторой подсети используется маска 255.255.255.128. 
# Сколько различных адресов компьютеров теоретически допускает эта маска, если два адреса (адрес сети и широковещательный) не используют?

from ipaddress import *
net = ip_network('0.0.0.0/255.255.255.128', 0)
print(net.num_addresses-2)


#Маской подсети называется 32-разрядное двоичное число, которое определяет, какая часть IP-адреса компьютера относится к адресу сети,
#  а какая часть IP-адреса определяет адрес компьютера в подсети. В маске подсети старшие биты, отведенные в IP-адресе компьютера для адреса сети, имеют значение 1; 
# младшие биты, отведенные в IP-адресе компьютера для адреса компьютера в подсети, имеют значение 0.
# Если маска подсети 255.255.248.0 и IP-адрес компьютера в сети 112.154.133.208, то номер компьютера в сети равен

from ipaddress import *
net = ip_network('112.154.133.208/255.255.248.0', 0)
k = 0 
for ip in net:
    if ip == ip_address('112.154.133.208'):
        print(k)
    k += 1

## В терминологии сетей ТСР/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети а какая - к адресу узла в этой сети. Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и его маске. Сеть задана IP-адресом 172.16.168.0 и маской сети 255.255.248.0.
#  Сколько в этой сети IP-адресов, для которых количество единиц в двоичной записи IP- адреса не кратно 5?

from ipaddress import *
net = ip_network('172.16.168.0/255.255.248.0', 0)
k = 0 
for ip in net:
    ip_bin = bin(int(ip))[2:].zfill(32)
    if ip_bin.count('1') % 5 != 0:
        k += 1
print(k)

#(К. Багдасарян) В терминологии сетей ТСР/IP маской сети называют двоичное число, которое показывает,
#  какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу узла в этой сети.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети. 
# Сеть задана IP-адресом 202.75.38.160 и маской сети 255.255.255.240. 
# Сколько в этой сети IP-адресов, у которых в двоичной записи IP-адреса имеется сочетание трех подряд идущих единиц? В ответе укажите только число.

from ipaddress import *
net = ip_network('202.75.38.160/255.255.255.240', 0)
k = 0 
for ip in net:
    ip_bin = bin(int(ip))[2:].zfill(32)
    if '111' in ip_bin:
        k += 1
print(k)

# (В. Зарянкин) В терминологии сетей ТСP/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу узла в этой сети.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и его маске. 
# Сеть задана IP-адресом 102.141.0.0 и сетевой маской 255.255.192.0.
#  Сколько в этой сети IP-адресов, для которых количество единиц в двоичной записи IP-адреса кратно 7, а сама двоичная запись оканчивается на 1011?

from ipaddress import *
net = ip_network('102.141.0.0/255.255.192.0', 0)
k = 0 
for ip in net:
    ip_bin = bin(int(ip))[2:].zfill(32)
    if ip_bin.count('1') % 7 == 0 and ip_bin[-4:] == '1011':
        k += 1
print(k)


#(М. Ишимов) В терминологии сетей ТСР/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу узла в этой сети.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети. 
# Сеть задана IP-адресом 186.135.80.0 и маской сети 255.255.252.0. Сколько в этой сети IP-адресов, 
# для которых в двоичной записи IP-адреса суммарное количество единиц в левых двух байтах больше суммарного количества единиц в правых двух байтах?

from ipaddress import *
net = ip_network('186.135.80.0/255.255.252.0', 0)
k = 0 
for ip in net:
    ip_bin = bin(int(ip))[2:].zfill(32)
    if ip_bin[:16].count('1') > ip_bin[16:].count('1'):
        k += 1
print(k)


#В терминологии сетей ТСР/IP маска сети - это двоичное число, меньшее 282; в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места нули.
#  Маска определяет, какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу самого узла в этой сети. Обычно маска записывается по тем же правилам, что и IP-адрес - в виде четырёх байт, причём каждый байт записывается в виде десятичного числа. 
# Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
#Для узла с IP-адресом 175.122.80.13 адрес подсети равен 175.122.80.0. 
# Сколько существует различных возможных значений маски, если известно, что в этой сети не менее 60 узлов? Ответ запишите в виде десятичного числа.


from ipaddress import *
k = 0 
for m in range(33):
    net = ip_network(f'175.122.80.13/{m}', 0)
    if '175.122.80.0' in str(net):
        if net.num_addresses -2 >= 60:
            k += 1
print(k)


#В терминологии сетей ТСР/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу узла в этой сети.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#  Узлы с IP-адресами 154.63.206.129 и 154.63.100.75 находятся в одной сети.
#  Укажите наименьшее возможное количество принадлежащих этой сети IP- адресов, в двоичной записи которых чётное число единиц.

from ipaddress import *


for m in range(32, -1, -1):
    net = ip_network(f'154.63.206.129/{m}', 0)
    net2 = ip_network(f'154.63.100.75/{m}', 0)
    if net == net2:
        k = 0
        for ip in net:
            if bin(int(ip))[2:].zfill(32).count('1') % 2 == 0:
                k+=1
        print(k)
        break

#В терминологии сетей ТСР/IP маской сети называется двоичное число, определяющее, какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу самого узла в этой сети. При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места нули. Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
#Например, если IP-адрес узла равен 231.32.255.131, а маска равна 255.255.240.0, то адрес сети равен 231.32.240.0.
#Известно, что в составе сети, которой принадлежит IP-адрес 149.238.225.115, есть узел, в IP-адресе которого первый байт совпадает с четвёртым, а второй - с третьим.
#Укажите наименьшее возможное количество принадлежащих этой сети IP- адресов, в двоичной записи которых ровно 15 единиц.

from ipaddress import *


for m in range(32, -1, -1):
    net = ip_network(f'149.238.225.115/{m}', 0)
    k = 0
    if ip_address('149.238.238.149') in net:
        for ip in net:
            if bin(int(ip))[2:].zfill(32).count('1') == 15:
                k+=1
        print(k)
        break


#*(М. Ишимов) В терминологии сетей ТСР/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу узла в этой сети.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети. 
# Сеть, в которой содержится узел с IP-адресом 117.157.2.8, задана маской сети 255.255.А.О,
#  где А - некоторое допустимое для записи маски число.
#  Определите минимальное значение А, для которого для всех IP- адресов этой сети в двоичной записи IP-адреса
#  суммарное количество единиц в левых двух байтах не менее суммарного количества единиц в правых двух байтах.

from ipaddress import *

for a in range(256):
    try:
        net = ip_network(f'117.157.2.8/255.255.{a}.0', 0)
        if all((bin(int(ip))[2:].zfill(32)[:16].count('1')) >= (bin(int(ip))[2:].zfill(32)[16:].count('1')) for ip in net):
            print(a)
            break
    except: pass

