#13 задание егэ по информатике
#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, 
#какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу узла в этой сети. 
# Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#Сеть задана IP-адресом 192.168.32.160 и маской сети 255.255.255.240. Сколько в этой сети IP-адресов, для которых сумма единиц в двоичной записи IP-адреса чётна?

#В ответе укажите только число.

from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

k=0

net = ip_network('192.168.32.160/255.255.255.240', 0)

for ip in net:
    if F(ip).count('1')%2==0:
        k += 1

print(k)



#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая – к адресу узла в этой сети. Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.

#Сеть задана IP-адресом 253.112.169.12 и маской сети 255.255.254.0. 
# Сколько в этой сети IP-адресов, для которых в двоичной записи IP-адреса
#  суммарное количество единиц в правых двух байтах не менее суммарного количества единиц в левых двух байтах.

from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

k=0

net = ip_network('253.112.169.12/255.255.254.0', 0)

for ip in net:
    s = F(ip)
    if s[:16].count('1') <= s[16:].count('1'):
        k += 1

print(k)

#Задача (Минимальный байт маски)
#В терминологии сетей TCP/IP маской сети называется двоичное число, определяющее, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая - к адресу самого узла в этой сети. Обычно маска записывается по теме же правилам, что и IP-адрес - в виде четырёх байтов,
#  причём каждый байт записывается в виде десятичного числа. При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого разряда - нули. 
# Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
#Например, если IP-адрес узла равен 231.32.255.131, а маска равна 255.255.240.0, то адрес сети равен 231.32. 240.0.
#Для узла с IP-адресом 111.81.88.168 адрес сети равен 111.81.88.160.
#Найдите наименьшее значение последнего байта маски. Ответ запишите в виде десятичного числа.

from ipaddress import *

ip = ip_address('111.81.88.168')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        print(net, net.netmask)


#Задача (Максимальное количество единиц в маске)
#В терминологии сетей TCP/IP маской сети называется двоичное число, определяющее, какая часть IP-адреса узла сети относится к адресу сети,
#  а какая – к адресу самого узла в этой сети. При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места – нули. 
# Обычно маска записывается по тем же правилам, что и IP-адрес – в виде четырёх байтов, причём каждый байт записывается в виде десятичного числа.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.

#Например, если IP-адрес узла равен 231.32.255.131, а маска равна 255.255.240.0, то адрес сети равен 231.32.240.0.
#Для узла с IP-адресом 93.138.70.47 адрес сети равен 93.138.64.0. 
# Каково наибольшее возможное общее количество единиц во всех четырёх байтах маски? Ответ запишите в виде десятичного числа.
from ipaddress import *

ip = ip_address('93.138.70.47')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        print(net)

#Задача (Количество адресов компьютеров)
#В терминологии сетей TCP/IP маской подсети называется 32-разрядное двоичное число, определяющее, какие именно разряды IP-адреса компьютера
#  являются общими для всей подсети – в этих разрядах маски стоит 1. Обычно маски записываются в виде четверки десятичных чисел – по тем же правилам, что и IP-адреса. 
#Для некоторой подсети используется маска 255.255.248.0. 
# Сколько различных адресов компьютеров допускает эта маска?
from ipaddress import *
net = ip_network('0.0.0.0/255.255.248.0')
print(net.num_addresses - 2)

#Задача (Количество масок)
#В терминологии сетей TCP/IP маска сети – это двоичное число, меньшее 232; в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места нули. 
# Маска определяет, какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу самого узла в этой сети.
#  Обычно маска записывается по тем же правилам, что и IP-адрес – в виде четырёх байт, причём каждый байт записывается в виде десятичного числа.
#  Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
#Для узла c IP-адресом 175.122.80.13 адрес подсети равен 175.122.80.0. 
#Сколько существует различных возможных значений маски, если известно, что в этой сети не менее 60 узлов? Ответ запишите в виде десятичного числа.
from ipaddress import *

ip = ip_address('175.122.80.13')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        print(net)
#or 
from ipaddress import *

ip = ip_address('175.122.80.13')

for mask in range(31):
    net = ip_network(f'{ip}/{mask}', 0)
    if net[0] < ip < net[-1]:
        if net.num_addresses - 2 >= 60:
            print(net)

#Задача (Порядковый номер компьютера)
#Маской подсети называется 32-разрядное двоичное число, которое определяет, какая часть IP-адреса компьютера относится к адресу сети, а какая часть IP-адреса определяет адрес компьютера в подсети. 
# В маске подсети старшие биты, отведенные в IP-адресе компьютера для адреса сети, имеют значение 1; младшие биты, отведенные в IP-адресе компьютера для
# адреса компьютера в подсети, имеют значение 0.

#Если маска подсети 255.255.255.224 и IP-адрес компьютера в сети 162.198.0.157, то порядковый номер компьютера в сети равен_____
#Решение:
#В этой задаче ключевой фразой является: "порядковый номер компьютера". Нужно знать, как решать данную тренировочную задачу из ЕГЭ по информатике.

#Первые 3 слева байты маски равны 255 (111111112), значит, они не участвуют в решении этой задачи.

#Мы фокусируем внимание на том байте IP-адреса, под которым байт маски имеет не все единицы в своих разрядах.

##Переведём числа 224 и 157 в двоичную систему.

#Число 224 в двоичной системе равно 111000002.

#Число 157 в двоичной системе равно 100111012.

#Запишем друг под другом данные числа в двоичной системе

#ЕГЭ по информатике - Задание 13 (Порядковый номер компьютера)

#Выписываем ту часть IP-адреса, которая находится над нулями.

#Нужно перевести это двоичное число 111012 в десятичную систему, это и будет ответ. Получается число 29

#Примечание:
#Предположим IP адрес будет 162.198.157.10, а маска подсети 255.255.224.0, тогда запишем байты IP-адреса, а под ними байты маски:

#10011101 00001010
#11100000 00000000
#о берём всё равно ту часть ip-адреса, которая находится над нулями! Не ограничиваемся 8-ю разрядами!
#11101000010102 = 7434
#Данную задачу лучше решать вручную без использования ipaddress.

#Задача (Параметр A в маске)
#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, какая часть IP-адреса узла сети относится к адресу сети, 
# а какая – к адресу узла в этой сети. 
#Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.

#Сеть задана IP-адресом 255.211.33.160 и маской сети 255.255.A.0, где A - некоторое допустимое для записи маски число. 
# Определите минимальное значение A, для которого для всех IP-адресов этой сети в двоичной записи IP-адреса суммарное количество единиц в левых двух байтах не менее 
# суммарного количества единиц в правых двух байтах.
from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

for i in range(9):

    A_bin = i * '1'

    while len(A_bin)<8:
        A_bin = A_bin + '0'

    A = int(A_bin, 2)
    
    net = ip_network(f'255.211.33.160/255.255.{A}.0', 0) #Заменять тут ответ будет первое число
    flag = 1
    for ip in net:
        s = F(ip)
        if s[:16].count('1') < s[16:].count('1'):
            flag=0
            break
    if flag==1:
        print(A)


#Задача (Параметр A в IP-адресе)
#В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает, 
##какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу узла в этой сети. 
#Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#Сеть задана IP-адресом 32.0.A.5, где A - некоторое допустимое для записи IP-адреса число, и маской сети 255.255.240.0. Определите минимальное значение A, 
# для которого для всех IP-адресов
#этой сети в двоичной записи IP-адреса суммарное количество единиц в левых двух байтах не более суммарного количества единиц в правых двух байтах.

from ipaddress import *

def F(ip):
    res=''
    a = str(ip).split('.')
    for s in a:
        res = res + format(int(s), 'b').zfill(8)
    return res

for A in range(256):
    
    net = ip_network(f'32.0.{A}.5/255.255.240.0', 0) #Заменять тут
    flag = 1
    for ip in net:
        s = F(ip)
        if s[:16].count('1') > s[16:].count('1'):
            flag=0
            break
    if flag==1:
        print(A)
        break
#Ещё одна такакя задача
def count_ones(ip):
    binary_ip = ''.join(format(int(octet), '08b') for octet in ip.split('.'))
    return binary_ip.count('1')

def find_min_a():
    a = 0
    while True:
        ip = f'192.214.{a}.184'
        mask = '255.255.255.224'
        network = '.'.join(str(int(ip_octet) & int(mask_octet)) for ip_octet, mask_octet in zip(ip.split('.'), mask.split('.')))
        if count_ones(network) > 15:
            return a
        a += 1

print(find_min_a())
