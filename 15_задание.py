#Какое количество натуральных чисел удовлетворяет логическому условию:
#Задача (Неравенство, одна переменная)
#¬(X2 ≥ 9) ∨ ¬((X < 7) ∨ (X ≥ 10)) ?
k=0
for x in range(1, 1000):
    if not(x**2 >= 9) or not((x < 7) or (x>=10)):
        k = k + 1
        
print(k)

#Задача (Неравенство, две переменные)
#Для какого наибольшего целого неотрицательного числа A выражение
#(x ≥ A) ∨ (y ≥ A) ∨ (x * y ≤ 205)
#tождественно истинно, т.е. принимает значение 1 при любых целых положительных x и y ?
for A in range(0, 300):
    k=0
    for x in range(1, 301):
        for y in range(1, 301):
            if (x >= A) or (y >= A) or (x * y <= 205):
                k=k+1
    if k==300*300:
        print(A)

#Задача (Функция ДЕЛ)
#Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наибольшего натурального числа А формула
#¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 9))
#тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

def D(n, m):
    if n%m==0:
        return True
    else:
        return False

for A in range(1, 1000):
    k=0
    for x in range(1, 1001):
        if D(x, A) or (not(D(x, 6)) or not(D(x, 9))):
            k=k+1
    if k==1000:
        print(A)

#Задача (Поразрядная конъюнкция)
#Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n. Так, например, 14&5 = 11102 & 01012 = 4
#Для какого наименьшего неотрицательного целого числа A формула
#x&51 ≠ 0 → (x&A = 0 → x&25 ≠ 0)
#тождественно истинна (то есть принимает значение 1 при любом неотрицательном целом значении переменной x)?

for A in range(0, 1000):
    k=0
    for x in range(0, 1000):
        if x&51==0 or (x&A!=0 or x&25!=0):
            k=k+1

    if k==1000:
        print(A)

# Задача (Отрезки, минимальная длина)
# На числовой прямой даны отрезки P=[5, 13] и Q=[8, 19]. 
# Укажите наименьшую возможную длину такого отрезка A, что формула (¬(x ∈ P) → (x ∈ Q)) → (x ∈ A ) верна при любых значениях x.

# Функция F проверяет, принадлежит ли точка x отрезку [a, b]
def F(a, b, x):
   if a <= x <= b:
       return True
   else:
       return False

# Инициализация минимальной длины отрезка A
mn = 10**9

# Цикл по всем возможным значениям границ отрезка A
for a in range(0, 100):
   for b in range(a, 100):
       # Счетчик количества точек, удовлетворяющих условию
       k = 0
       # Цикл по всем возможным значениям x
       for i in range(2, 200):
           x = i / 2
           # Проверка условия (¬(x ∈ P) → (x ∈ Q)) → (x ∈ A )
           if not((F(5, 13, x) or F(8, 19, x))) or F(a, b, x):
               k += 1
       # Если все точки удовлетворяют условию, то обновляем минимальную длину отрезка A
       if k == 198:
           mn = min(mn, b - a)

# Выводим минимальную длину отрезка A
print(mn)

#
##
##
#
#

#
# Задача (Отрезки, максимальная длина)
# На числовой прямой даны два отрезка: P = [43; 49] и Q = [44; 53]. Укажите наибольшую возможную длину такого отрезка A, что формула
# ((x ∈ A) → (x ∈ P)) ∨ (x ∈ Q)
# тождественно истинна, то есть принимает значение 1 при любых x.

# Функция F проверяет, принадлежит ли точка x отрезку [a, b]
def F(a, b, x):
   if a <= x <= b:
       return True
   else:
       return False

# Функция F2 проверяет, принадлежит ли точка x интервалу (a, b)
def F2(a, b, x):
   if a < x < b:
       return True
   else:
       return False

# Инициализация максимальной длины отрезка A
mx = 0

# Цикл по всем возможным значениям границ отрезка A
for a in range(0, 100):
   for b in range(a, 100):
       # Счетчик количества точек, удовлетворяющих условию
       k = 0
       # Цикл по всем возможным значениям x
       for i in range(2, 200):
           x = i / 2
           # Проверка условия ((x ∈ A) → (x ∈ P)) ∨ (x ∈ Q)
           if (not(F2(a, b, x)) or F(43, 49, x)) or F(44, 53, x):
               k += 1
       # Если все точки удовлетворяют условию, то обновляем максимальную длину отрезка A
       if k == 198:
           mx = max(mx, b - a)

# Выводим максимальную длину отрезка A
print(mx)


# Задача (Гибрид, ЕГЭ по информатике 2024)
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». 
# Пусть на числовой прямой дан отрезок B = [70, 90].
# Для какого наибольшего натурального числа А логическое выражение ДЕЛ(x, А) \/ ((x ∈ B) → ¬ДЕЛ(x, 22)) истинно (т.е. принимает значение 1) 
# при любом целом положительном значении переменной х?

# Функция D проверяет, делится ли число n на число m без остатка
def D(n, m):
   if n % m == 0:
       return True
   else:
       return False

# Функция F проверяет, принадлежит ли точка x отрезку [a, b]
def F(a, b, x):
   if a <= x <= b:
       return True
   else:
       return False

# Цикл по всем возможным значениям А
for A in range(1, 1000):
   # Счетчик количества точек, удовлетворяющих условию
   k = 0
   # Цикл по всем возможным значениям x
   for x in range(1, 1001):
       # Проверка условия ДЕЛ(x, А) \/ ((x ∈ B) → ¬ДЕЛ(x, 22))
       if D(x, A) or (not(F(70, 90, x)) or not(D(x, 22))):
           k += 1
   # Если все точки удовлетворяют условию, то выводим значение А
   if k == 1000:
       print(A)


# Задача (Неравенство, две переменные, закрепление)
# Для какого наибольшего целого неотрицательного числа A выражение
# (x < A) ∧ (y < A) ∧ (x * y > 603)
# тождественно ложно, т.е. принимает значение 0 при любых целых положительных x и y ?

# Цикл по всем возможным значениям A
for A in range(0, 300):
   # Счетчик количества точек, удовлетворяющих условию
   k = 0
   # Цикл по всем возможным значениям x и y
   for x in range(1, 301):
       for y in range(1, 301):
           # Проверка условия (x < A) ∧ (y < A) ∧ (x * y > 603)
           if not((x < A) and (y < A) and (x * y > 603)):
               k += 1
   # Если все точки удовлетворяют условию, то выводим значение A
   if k == 300 * 300:
       print(A)



#Укажите наименьшее целое значение А, при котором выражение
#(2y + x < A) V (x > 10) V (y > 25)
#истинно для любых целых положительных значений х
#и у.

def F(x, y):
    return (2*y + x < A) or (x > 10) or (y > 25)

for A in range(1, 1000):
    if all(F(x, y) for x in range(1, 1000) for y in range(1, 1000)):
        print(A)
        break


#Укажите наибольшее целое значение А, при котором выражение 
# (y + 3x != 60) V (x > A) V (y > A) истинно для любых целых положительных значений х и у.

def F(x, y):
    return (y + 3*x != 60) or (x > A) or (y > A)

for A in range(1, 1000):
    if all(F(x, y) for x in range(1, 1000) for y in range(1, 1000)):
        print(A)


#Для какого наименьшего целого неотрицательного А выражение
#(x • y < A) V (x < y) V (9 < x)
#тождественно истинно, т.е. принимает значение 1 при любых целых неотрицательных значениях переменных х и у?

def F(x, y):
    return (x * y < A) or (x < y) or (9 < x)

for A in range(1, 1000):
    if all(F(x, y) for x in range(0, 1000) for y in range(0, 1000)):
        print(A)
        break


#Для какого наименьшего целого числа А выражение
#((x - 20 < A) (10 - y < A)) V ((x+4)•y > 45)
#тождественно истинно, т.е. принимает значение 1 при любых целых положительных х и у?

def F(x, y):
    return ((x - 20 < A) and (10 - y < A)) or ((x+4)*y > 45)

for A in range(1, 1000):
    if all(F(x, y) for x in range(1, 1000) for y in range(1, 1000)):
        print(A)
        break

#При каком наибольшем целом А найдутся такие целые неотрицательные х и у, при которых выражение
#(3*x + 2 y > 25) V (x > 2-y) V (x + 4 y < A)
#ложно?

def F(x, y):
    return (3*x + 2*y > 25) or (x > 2*y) or (x + 4*y < A)

for A in range(1, 1000):
    if all(F(x, y) for x in range(1, 1000) for y in range(1, 1000))==0:
        print(A)
        

#Введём выражение М & К, обозначающее поразрядную конъюнкцию М и К (логическое «И» между соответствующими битами двоичной записи).
#  Определите наименьшее натуральное число А, такое что выражение (X & 112 # 0 V X & 86 0) -> (X & 65 = 0 -> X & A #0)
#  тождественно истинно (то есть принимает значение 1 при любом натуральном значении переменной X)?

def F(x):
    return ((x & 112 != 0) or (x & 86 != 0)) <= ((x & 65 == 0) <= (x & A != 0))

for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        print(A)
        break


#Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел т и п. Например, 14 & 5 = 11102 & 01012 = 01002 = 4.
#  Для какого наименьшего натурального числа А формула
#((x & 84653 # 0) V (x & 51763 # 0)) -> (x & A > 0) тождественно истинно (то есть принимает значение 1 при любом неотрицательном значении переменной Х)?

def F(x):
    return ((x & 84653 != 0) or (x & 51763 != 0)) <= ((x & A) > 0)

for A in range(1, 100000):
    if all(F(x) for x in range(0, 100000)):
        print(A)
        break


#Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наименьшего натурального числа А формула
#(ДЕЛ(х, 7) -> not ДЕЛ(х, 21)) V (2x + A > 120)
#тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной х)?

def F(x):
    return ((x % 7 == 0) <= ((x % 21 != 0))) or (2*x + A >= 120)

for A in range(1, 10000):
    if all(F(x) for x in range(1, 10000)):
        print(A)
        break

#Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наибольшего натурального числа А формула
#-ДЕЛ(х, А) -> (-ДЕЛ(х, 24) Л-ДЕЛ(х, 36))
#тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной х)?

def F(x):
    return (x % A != 0) <= ((x % 24 != 0) or (x % 36 != 0))

for A in range(1000, 0, -1):
    if all(F(x) for x in range(1, 10000)):
        print(A)
        break


#Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Сколько существует натуральных значений А на отрезке [1;1000], при которых формула
#ДЕЛ(А, 35) Л (ДЕЛ(730, х) -> (-ДЕЛ(А, х) -> -ДЕЛ(110, х)))
#тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной х)?


def F(x):
    return (A%35 == 0) and ((730%x == 0) <= ((A%x != 0) <= ((110%x != 0))))

k = 0
for A in range(1, 1001):
    if all(F(x) for x in range(1, 10000)):
       k+=1 
print(k)



#(А. Кабанов) Обозначим через ДЕЛ(п, m) утверждение «натуральное число п делится без остатка на натуральное число m» ; и пусть на числовой прямой дан отрезок В = [160; 180]. Для какого количества различных натуральных значений числа А формула
#(x € В) -> (ДЕЛ(х, 35) -> ДЕЛ(х, A))
#тождественно истинна, то есть принимает значение 1 при любом натуральном значении переменной х?

def F(x):
    return (x in range(160, 181)) <= ((x%35 == 0) <= (x%A == 0))

k = 0
for A in range(1, 1001):
    if all(F(x) for x in range(1, 10000)):
       k+=1 
print(k)


#Элементами множеств А, Р и Q являются натуральные числа, причём Р = { 1,
#12 } и Q = { 12, 13, 14, 15, 16 }. Известно, что выражение
#(x € A) -> (-(x € P) A-(x € Q))
#истинно (т. е. принимает значение 1) при любом значении переменной х.
#Определите наименьшее возможное количество элементов множества А.

p = {1, 12}
q = {12, 13, 14, 15, 16}
a = set()
for x in range(1, 1000):
    if not((x not in a)<=(x not in p) and (x not in q)):
        a.add(x)
print(len(a))


#Элементами множеств А, Р и Q являются натуральные числа, причём Р= 2, 4, 6, 8, 10, 12, 14, 16, 18, 20} и Q-{5, 10, 15, 20, 25, 30, 35, 40, 45, 50}. Известно, что выражение
#((x € A) -> (x € P)) V ( (x € Q) -> (x € A))
#истинно (т.е. принимает значение 1 при любом значении переменной х.
#Определите наибольшее возможное количество элементов в множестве А.
p = set(range(2, 21, 2))
q = set(range(5, 51, 5))
a = set(1,1000)
for x in range(1, 1000):
    if not(((x in a)<=(x in p))or ((x not in q)<=(x not in a))):
        a.remove(x)
print(len(a))


