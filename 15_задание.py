#Какое количество натуральных чисел удовлетворяет логическому условию:
#Задача (Неравенство, одна переменная)
#¬(X2 ≥ 9) ∨ ¬((X < 7) ∨ (X ≥ 10)) ?
k=0
for x in range(1, 1000):
    if not(x**2 >= 9) or not((x < 7) or (x>=10)):
        k = k + 1
        
print(k)

#Задача (Неравенство, две переменные)
#Для какого наибольшего целого неотрицательного числа A выражение
#(x ≥ A) ∨ (y ≥ A) ∨ (x * y ≤ 205)
#tождественно истинно, т.е. принимает значение 1 при любых целых положительных x и y ?
for A in range(0, 300):
    k=0
    for x in range(1, 301):
        for y in range(1, 301):
            if (x >= A) or (y >= A) or (x * y <= 205):
                k=k+1
    if k==300*300:
        print(A)

#Задача (Функция ДЕЛ)
#Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наибольшего натурального числа А формула
#¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 9))
#тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

def D(n, m):
    if n%m==0:
        return True
    else:
        return False

for A in range(1, 1000):
    k=0
    for x in range(1, 1001):
        if D(x, A) or (not(D(x, 6)) or not(D(x, 9))):
            k=k+1
    if k==1000:
        print(A)

#Задача (Поразрядная конъюнкция)
#Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n. Так, например, 14&5 = 11102 & 01012 = 4
#Для какого наименьшего неотрицательного целого числа A формула
#x&51 ≠ 0 → (x&A = 0 → x&25 ≠ 0)
#тождественно истинна (то есть принимает значение 1 при любом неотрицательном целом значении переменной x)?

for A in range(0, 1000):
    k=0
    for x in range(0, 1000):
        if x&51==0 or (x&A!=0 or x&25!=0):
            k=k+1

    if k==1000:
        print(A)

# Задача (Отрезки, минимальная длина)
# На числовой прямой даны отрезки P=[5, 13] и Q=[8, 19]. 
# Укажите наименьшую возможную длину такого отрезка A, что формула (¬(x ∈ P) → (x ∈ Q)) → (x ∈ A ) верна при любых значениях x.

# Функция F проверяет, принадлежит ли точка x отрезку [a, b]
def F(a, b, x):
   if a <= x <= b:
       return True
   else:
       return False

# Инициализация минимальной длины отрезка A
mn = 10**9

# Цикл по всем возможным значениям границ отрезка A
for a in range(0, 100):
   for b in range(a, 100):
       # Счетчик количества точек, удовлетворяющих условию
       k = 0
       # Цикл по всем возможным значениям x
       for i in range(2, 200):
           x = i / 2
           # Проверка условия (¬(x ∈ P) → (x ∈ Q)) → (x ∈ A )
           if not((F(5, 13, x) or F(8, 19, x))) or F(a, b, x):
               k += 1
       # Если все точки удовлетворяют условию, то обновляем минимальную длину отрезка A
       if k == 198:
           mn = min(mn, b - a)

# Выводим минимальную длину отрезка A
print(mn)

#
##
##
#
#

#
# Задача (Отрезки, максимальная длина)
# На числовой прямой даны два отрезка: P = [43; 49] и Q = [44; 53]. Укажите наибольшую возможную длину такого отрезка A, что формула
# ((x ∈ A) → (x ∈ P)) ∨ (x ∈ Q)
# тождественно истинна, то есть принимает значение 1 при любых x.

# Функция F проверяет, принадлежит ли точка x отрезку [a, b]
def F(a, b, x):
   if a <= x <= b:
       return True
   else:
       return False

# Функция F2 проверяет, принадлежит ли точка x интервалу (a, b)
def F2(a, b, x):
   if a < x < b:
       return True
   else:
       return False

# Инициализация максимальной длины отрезка A
mx = 0

# Цикл по всем возможным значениям границ отрезка A
for a in range(0, 100):
   for b in range(a, 100):
       # Счетчик количества точек, удовлетворяющих условию
       k = 0
       # Цикл по всем возможным значениям x
       for i in range(2, 200):
           x = i / 2
           # Проверка условия ((x ∈ A) → (x ∈ P)) ∨ (x ∈ Q)
           if (not(F2(a, b, x)) or F(43, 49, x)) or F(44, 53, x):
               k += 1
       # Если все точки удовлетворяют условию, то обновляем максимальную длину отрезка A
       if k == 198:
           mx = max(mx, b - a)

# Выводим максимальную длину отрезка A
print(mx)


# Задача (Гибрид, ЕГЭ по информатике 2024)
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». 
# Пусть на числовой прямой дан отрезок B = [70, 90].
# Для какого наибольшего натурального числа А логическое выражение ДЕЛ(x, А) \/ ((x ∈ B) → ¬ДЕЛ(x, 22)) истинно (т.е. принимает значение 1) 
# при любом целом положительном значении переменной х?

# Функция D проверяет, делится ли число n на число m без остатка
def D(n, m):
   if n % m == 0:
       return True
   else:
       return False

# Функция F проверяет, принадлежит ли точка x отрезку [a, b]
def F(a, b, x):
   if a <= x <= b:
       return True
   else:
       return False

# Цикл по всем возможным значениям А
for A in range(1, 1000):
   # Счетчик количества точек, удовлетворяющих условию
   k = 0
   # Цикл по всем возможным значениям x
   for x in range(1, 1001):
       # Проверка условия ДЕЛ(x, А) \/ ((x ∈ B) → ¬ДЕЛ(x, 22))
       if D(x, A) or (not(F(70, 90, x)) or not(D(x, 22))):
           k += 1
   # Если все точки удовлетворяют условию, то выводим значение А
   if k == 1000:
       print(A)


# Задача (Неравенство, две переменные, закрепление)
# Для какого наибольшего целого неотрицательного числа A выражение
# (x < A) ∧ (y < A) ∧ (x * y > 603)
# тождественно ложно, т.е. принимает значение 0 при любых целых положительных x и y ?

# Цикл по всем возможным значениям A
for A in range(0, 300):
   # Счетчик количества точек, удовлетворяющих условию
   k = 0
   # Цикл по всем возможным значениям x и y
   for x in range(1, 301):
       for y in range(1, 301):
           # Проверка условия (x < A) ∧ (y < A) ∧ (x * y > 603)
           if not((x < A) and (y < A) and (x * y > 603)):
               k += 1
   # Если все точки удовлетворяют условию, то выводим значение A
   if k == 300 * 300:
       print(A)



