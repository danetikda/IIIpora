#6 задание Егэ по информатике


#Повтори 16 [Налево 36 Вперёд 4 Налево 36]
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом. 
# Точки на линии следует учитывать.

from turtle import *
tracer(0)

left(90)
for i in range(16):
    left(36)
    forward(4*40)
    left(36)

penup()
for x in range(-10, 10):
    for y in range(-10, 10):
        setpos(x*40, y*40)
        dot(4, 'red')

#Задача (ЕГЭ по информатике 2023, объединение фигур)
#Повтори 2 [Вперёд 10 Направо 90 Вперёд 18 Направо 90]
#Поднять хвост
#Вперёд 5 Направо 90 Вперёд 7 Налево 90
#Опустить хвост
#Повтори 2 [Вперёд 10 Направо 90 Вперёд 7 Направо 90]
#Определите, сколько точек с целочисленными координатами будут находиться внутри объединения фигур, ограниченных заданными алгоритмом линиями, включая точки на линиях.

import turtle

# Инициализация Черепахи
t = turtle.Turtle()
t.speed(999)  # Установка максимальной скорости черепахи

# Функция для выполнения команды "Вперёд n"
def forward(n):
    t.forward(n)

# Функция для выполнения команды "Назад n"
def backward(n):
    t.backward(n)

# Функция для выполнения команды "Направо m"
def right(m):
    t.right(m)

# Функция для выполнения команды "Налево m"
def left(m):
    t.left(m)

# Функция для выполнения команды "Поднять хвост"
def pen_up():
    t.penup()

# Функция для выполнения команды "Опустить хвост"
def pen_down():
    t.pendown()

# Функция для выполнения команды "Повтори k [Команда1 Команда2 … КомандаS]"
def repeat(k, commands):
    for _ in range(k):
        for command in commands:
            command()

# Выполнение алгоритма
repeat(2, [forward(10), right(90), forward(18), right(90)])
pen_up()
forward(5)
right(90)
forward(7)
left(90)
pen_down()
repeat(2, [forward(10), right(90), forward(7), right(90)])

# Завершение работы черепахи
turtle.done()

#Задача (Досрок 2024, Пересечение фигур)
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 2 [Вперёд 13 Направо 90 Вперёд 18 Направо 90]
# Поднять хвост
# Вперёд 5 Направо 90 Вперёд 9 Налево 90
# Опустить хвост
# Повтори 2 [Вперёд 11 Направо 90 Вперёд 7 Направо 90]
# Определите, сколько точек с целочисленными координатами будут находиться внутри пересечения фигур, ограниченных заданными алгоритмом линиями, включая точки на линиях.

import turtle

# Инициализация Черепахи
t = turtle.Turtle()
t.speed(0)  # Установка максимальной скорости черепахи

# Функция для выполнения команды "Вперёд n"
def forward(n):
    t.forward(n)

# Функция для выполнения команды "Назад n"
def backward(n):
    t.backward(n)

# Функция для выполнения команды "Направо m"
def right(m):
    t.right(m)

# Функция для выполнения команды "Налево m"
def left(m):
    t.left(m)

# Функция для выполнения команды "Поднять хвост"
def pen_up():
    t.penup()

# Функция для выполнения команды "Опустить хвост"
def pen_down():
    t.pendown()

# Функция для выполнения команды "Повтори k [Команда1 Команда2 … КомандаS]"
def repeat(k, commands):
    for _ in range(k):
        for command in commands:
            command()

# Выполнение алгоритма
repeat(2, [forward(13), right(90), forward(18), right(90)])
pen_up()
forward(5)
right(90)
forward(9)
left(90)
pen_down()
repeat(2, [forward(11), right(90), forward(7), right(90)])

# Завершение работы черепахи
turtle.done()


#Задача (ЕГЭ по информатике 2024, Периметр фигуры)

#Черепахе был дан для исполнения следующий алгоритм:
#Повтори 9 [Вперёд 22 Направо 90 Вперед 6 Направо 90]
#Поднять хвост
#Вперед 1 Направо 90 Вперёд 5 Налево 90
#Опустить хвост
#Повтори 9 [Вперёд 53 Направо 90 Вперёд 75 Направо 90]
#Определите периметр области пересечения фигур, ограниченных заданными алгоритмом линиями.

import turtle

# Инициализация Черепахи
t = turtle.Turtle()
t.speed(0)  # Установка максимальной скорости черепахи

# Функция для выполнения команды "Вперёд n"
def forward(n):
    t.forward(n)

# Функция для выполнения команды "Назад n"
def backward(n):
    t.backward(n)

# Функция для выполнения команды "Направо m"
def right(m):
    t.right(m)

# Функция для выполнения команды "Налево m"
def left(m):
    t.left(m)

# Функция для выполнения команды "Поднять хвост"
def pen_up():
    t.penup()

# Функция для выполнения команды "Опустить хвост"
def pen_down():
    t.pendown()

# Функция для выполнения команды "Повтори k [Команда1 Команда2 … КомандаS]"
def repeat(k, commands):
    for _ in range(k):
        for command in commands:
            command()

# Выполнение алгоритма
repeat(9, [forward(22), right(90), forward(6), right(90)])
pen_up()
forward(1)
right(90)
forward(5)
left(90)
pen_down()
repeat(9, [forward(53), right(90), forward(75), right(90)])

# Завершение работы черепахи
turtle.done()

#Задача (Составляем уравнения)

#Запись Повтори k [Команда 1 Команда 2 ... Команда S] означает, что последовательность из S команд повторится k раз.
#Черепахе был дан для исполнения следующий алгоритм:
#Вперёд 100 Направо 90 Вперёд 100 Направо 30 Опусти Повтори 10 [Вперёд 25 Направо 90]
#Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.

import turtle

# Инициализация Черепахи
t = turtle.Turtle()
t.speed(0)  # Установка максимальной скорости черепахи

# Функция для выполнения команды "Вперёд n"
def forward(n):
    t.forward(n)

# Функция для выполнения команды "Направо m"
def right(m):
    t.right(m)

# Функция для выполнения команды "Опусти"
def pen_down():
    t.pendown()

# Функция для выполнения команды "Повтори k [Команда1 Команда2 … КомандаS]"
def repeat(k, commands):
    for _ in range(k):
        for command in commands:
            command()

# Выполнение алгоритма
forward(100)
right(90)
forward(100)
right(30)
pen_down()
repeat(10, [forward(25), right(90)])

# Завершение работы черепахи
turtle.done()

