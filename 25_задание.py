#Обработка целочисленной информации
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [194455; 194500], числа, имеющие ровно 4 различных делителя.
# В ответе для каждого найденного числа запишите два его наиболь летителя в порялке возрастания
for i in range(194455,194501):
    divs = set()
    for d in range(1, int(i**0.5)+1):
        if i %d ==0:
            divs.add(d)
            divs.add(i//d)
            if len(divs)>4:
                break
    if len(divs)==4:
        print(sorted(divs)[-2:])


# (Б.С. Михлин) Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [286564; 287270], числа, имеющие максимальное количество различных делителей.
# Если таких чисел несколько то найдите максимальное из них. В ответе запишите два числа: количество делителей найденного числа и его наиболыший делитель, не равный самому числу.
max_divs = []

for i in range(286564,287271): #шаблон цикла перебора чисел отрезка меняеться только отрезок (начало)
    divs = set()
    for d in range(1, int(i**0.5)+1):
        if i %d ==0:
            divs.add(d)
            divs.add(i//d) #Шаблон цикла нахождения делителей (конец)
    if len(divs)>= len(max_divs):
        max_divs = list(divs)
print(len(max_divs), sorted(max_divs)[-2])



# Напите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [7178551; 7178659], простые числа. 
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа

def is_prime(a):
    return a>1 and all(a%d!=0 for d in range(2,int(a**0.5)+1)) #шаблон проверки на простоту числа

count = 1
for i in range(7178551, 7178659+1):
    if is_prime(i):
        print(count, i)
        count +=1


##########################
def is_prime(a):
    return a>1 and all(a%d!=0 for d in range(2,int(a**0.5)+1))

s = 0
for i in range(3159,31584+1): #сумма цифр найденных чисел
    if is_prime(i):
        s+=sum(map(int, str(i)))
print(s)

# Среди целых чисел, принадлежащих числовому отрезку [268312;336492], найдите числа, которые представляют собой произведение двух различных простых делителей.
# Запишите в ответ количество таких чисел и минимальное их них.
def is_prime(a):
    return a>1 and all(a%d!=0 for d in range(2,int(a**0.5)+1))


count, minim = 0, 10**100
for i in range(268312, 336492+1):
    for di in range(2, int(i**0.5)+1):
        if di **2 ==i: break
        if di * (i//di)==i and is_prime(di) and is_prime(i//di):
            count+=1
            minim = min(minim, i)
print(count, minim)


# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу. Найдите все натуральные числа, принадлежащие отрезку [1523467; 4157812] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе два числа: само число и его наибольший нетривиальный делитель. Найденные числа расположите в порядке возрастания.
def is_prime(a):
    return a>1 and all(a%d!=0 for d in range(2,int(a**0.5)+1))

for q4 in range(int(1523467**0.25), int(4157812 **0.25)+1):
    i = q4 **4
    if 1523467 <= i <=4157812 and is_prime(q4):
        print(i, q4**3)



# Найдите все натуральные числа, N, принадлежащие отрезку [100 000 000; 300 000 000], которые можно представить в виде N = 2mh 7", где тчётное число, n нечётное число.
# В ответе запишите все найденные числа в порядке возрастания, а справа от каждого числа - сумму m+n.
ans = []
for m in range(0, 30, 2):
    for n in range(1,30,2):
        if 100_000_000 <=2**m *7 **n <=300_000_000:
            ans.append((2**m*7**n,m+n))
print(sorted(ans))

# Пусть М - сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то значение М считается равным нулю. Например, для числа 20 имеем M = 2 + 10 = 12.
# Напишите программу, которая перебирает целые числа, меньшие 900 000, в порядке убывания и ищет среди них такие, для которых значение М оканчивается на 112.
# В ответе запишите в первом столбце таблицы первые пять найденных чисел в порядке возрастания, а во втором столбце - соответствующие им значения М
i, k = 899_999, 0
ans = []
while k != 5:
    divs = set()
    for d in range(2, int(i**0.5)+1):
        if i %d ==0:
            divs.add(d)
            divs.add(i//d)
    if len(divs)!=0:
        m = max(divs)+min(divs)
        if m %1000 ==112:
            k+=1
            ans.append((i, m))
    i -=1
print(sorted(ans))


