#8 задание Егэ по информатике
#Шифр кодового замка представляет собой последовательность из пяти символов, каждый из которых является цифрой от 1 до 4.
#  Сколько различных вариантов шифра можно задать, если известно, что цифра 1 встречается ровно два раза,
#  а каждая из других допустимых цифр может встречаться в шифре любое количество раз или не встречаться совсем?
from itertools import product 
alphabet = '1234'
ap=[]
for i in product(alphabet, repeat=5):    
    if i.count('1') == 2:
        ap.append(i)
print(len(ap))

#Составляют 5-⁠буквенные слова из букв слова ПЯТНИЦА. 
#Найти количество слов, которые не начинаются с Н и в которых есть только одна буква Я.
#Буквы в слове могут повторяться.
from itertools import product
count = 0
for p in product("ПЯТНИЦА", repeat=5):
    if p.count("Я") == 1 and p[0]!="Н":
        count+=1
print(count)

#Сколько существует чисел, восьмеричная запись которых содержит 5 цифр, причем в записи нет цифры 1. 
# Также все цифры записи различны и никакие две чётные и две нечётные цифры не стоят рядом.

from itertools import *
word = '0234567'
count = 0
for i in permutations(word,5):
    x = ''.join(i)
    if x[0] != '0':
        x = x.replace('7','1').replace('5','1').replace('3','1').replace('6','0').replace('4','0').replace('2','0')
        if ('00' not in x) and ('11' not in x):
            count += 1
print(count)


#Все 5-буквенные слова, в составе которых могут быть буквы А, Л, Г, О, Р, И, Т, М, записаны в алфавитном порядке и пронумерованы начиная с 1.

#Определите в этом списке количество слов с нечетными номерами,
#  которые не начинаются с буквы Г и при этом содержат в своей записи не менее двух букв И.

from itertools import product
count = 0
number = 0
for p in product(sorted("АЛГОРИТМ"), repeat=5):
    number += 1
    if number % 2 != 0 and p[0]!="Г" and p.count("И") >= 2:
        count+=1
print(count)

#Сколько существует десятичных чисел, которые делятся на 5, при условии что все цифры числа различные?
from itertools import permutations
word = '0123456789'
c = 0
for j in range(1,11):
    for i in permutations(word,j):
        x = ''.join(i)
        if x[0] != '0' and (x[-1] == '5' or x[-1] == '0'):
            c += 1
print(c + 1) #+1 случай когда число равно 0

#Джон составляет список всех возможных кодов, составленных из заглавных латинских букв.
#  Сначала он выписывает в алфавитном порядке все коды, состоящие из одного символа (A, B, …, Z),
#  затем  — тоже в алфавитном порядке  — коды из двух символов (AA, AB, …, AZ, BA, BB, … ZZ),
#  далее идут трёхсимвольные коды (AAA, AAB, …, ZZZ) и так далее.

#Под каким номером окажется в этом списке код FDECBA?

from itertools import product
 
count = 1
alf = sorted('QWERTYUIOPASDFGHJKLZXCVBNM')
for n in range(1,7):
    for i in product(alf,repeat = n):
        if "".join(i)=="FDECBA":
            print(count)
            break
        count += 1




#Миша составляет 6-буквенные коды из букв Б, А, Н, К, И, Р. Каждая допустимая гласная буква может входить в код не более одного раза. Сколько кодов может составить Миша?

from itertools import product

k = 0
for w in product('БАНКИР',repeat=6):
    if w.count('А') <= 1 and w.count('И') <= 1:
        k += 1
print(k)


#Из букв слова Р А З М А Х составляются 6-буквенные последовательности. 
# Сколько можно составить различных последовательностей, если известно, что в каждой из них содержится не менее 3 согласных?

from itertools import product

k = 0
for w in product('РАЗМХ',repeat=6):
    if w.count('Р') + w.count('З') + w.count('М') + w.count('Х') >= 3:
        k += 1
print(k)

#or 
from itertools import product

k = set()
for w in product('РАЗМАХ',repeat=6):
    if w.count('Р') + w.count('З') + w.count('М') + w.count('Х') >= 3:
        k.add(w)
print(len(k))

#Василий составляет 4-буквенные коды из букв В, А, Я, Ю, Щ, И, Й. 
# Каждую букву можно использовать любое количество раз, при этом код не может начинаться с буквы Й и должен содержать хотя бы одну гласную.
# Сколько различных кодов может составить Василий?

from itertools import product

k = 0
for w in product('ВАЯЮЩИЙ',repeat=4):
    if w[0]!='Й' and w.count('А')+w.count('Я')+w.count('Ю')+w.count('И')>0: #код не может начинаться с буквы Й и должен содержать хотя бы одну гласную.
        k += 1
print(k)

#or
from itertools import product

k = 0
for w in product('ВАЯЮЩИЙ',repeat=4):
    if w[0]!='Й' and any(ch in 'АЯЮИ' for ch in w): #любая гласная в коде
        k += 1
print(k)



#Сергей составляет 5-буквенные коды из букв Ж, А, Л, Е, Й. 
# Буква Й может использоваться в коде не более одного раза, при этом она не может стоять на первом месте, на последнем месте и рядом с буквой Е. 
# Все остальные буквы могут встречаться произвольное количество раз или не встречаться совсем. Сколько различных кодов может составить Сергей?

from itertools import product

k = 0
for w in product('ЖАЛЕЙ',repeat=5):
    word = ''.join(w)
    if word.count('Й')<=1 and word[0] != 'Й' and word[-1] != 'Й' and 'ЕЙ' not in word and 'ЙЕ' not in word:
        k += 1
print(k)


#Петя составляет шестибуквенные слова перестановкой букв слова АДЖИКА.
#  При этом он избегает слов с двумя подряд одинаковыми буквами. 
# Сколько всего различных слов может составить Петя?

from itertools import permutations

k = set()
for w in permutations('аджика'):
    word = ''.join(w)
    if 'аа' not in word:
        k.add(word)
print(len(k))

#Маша составляет 7-буквенные коды из букв В, Е, Н, Т, И, Л, Ь.
#  Каждую букву нужно использовать ровно 1 раз, при этом буква Ь не может стоять на последнем месте и между гласными. Сколько различных кодов может составить Маша?

from itertools import permutations

k = 0
for w in permutations('вентиль'):
    word = ''.join(w)
    if word[-1] != 'ь' and "еьи" not in word and "иье" not in word:
        k += 1
print(k)

#Вася составляет слова из букв слова АММИАКАТ.
#  Код должен состоять из 8 букв, и каждая буква в нём должна встречаться столько же раз, сколько в заданном слове. 
# Кроме того, в коде должны стоять рядом две гласные или две согласные буквы. Сколько различных слов может составить Вася?

from itertools import permutations

k = set()
for w in permutations('аммиакат'):
    s = ''
    for i in w:
        s += 'g' if i in 'аи' else 's'
    if 'ss' in s or 'gg' in s:
        k.add(w)
print(len(k))


#Маша составляет коды из букв, входящих в слово КОНДРАТ. 
# Каждая буква должна входить в код ровно один раз. Все возможные коды Маша записывает в алфавитном порядке и нумерует. Начало списка выглядит так:
#1. АДКНОРТ
#2. АДКНОТР
#3. АДКНРОТ
#Какой код будет записан под номером 2233?

from itertools import permutations
print([i for i in permutations('адкнорт')][2232])

#Все 5-буквенные слова, составленные из букв Д, К, М, О, записаны в алфавитном порядке и пронумерованы. Вот начало списка:
#1. ДДДДД
#2. ДДДДК
#3. ДДДДМ
#4. ДДДДО
#5. ДДДКД
#Какое количество слов находятся между словами ДОМОК и КОМОД (включая эти слова)?

from itertools import product

k = [''.join(i) for i in product('дкмо',repeat=5)]
print(k.index('комод')-k.index('домок')+1)

#Все четырёхбуквенные слова, составленные из букв А, Л, Г, О, Р, И, Т, М, записаны в алфавитном порядке и пронумерованы, начиная с 1. Начало списка выглядит так:
#1. AAAA
#2. АААГ
#3. АААИ
#4. АААЛ
#5. АAAM
#6. ААAO
#7. АAAP
#8. АAAT
#9. ААГа
#Под каким номером в списке идёт первое слово, которое начинается с букв ГО?

from itertools import product

for i, x in enumerate(product(sorted('аглоритм'),repeat=4), 1):
    word = ''.join(x)
    if word[:2] == 'го':
        print(i)
        break



#Все пятибуквенные слова, составленные из букв К, О, М, П, Ь, Т, Е, Р записаны в алфавитном порядке и пронумерованы. Начало списка выглядит так:
#1. EEEEE
#2. EEEEK
#3. EEEEM
#4. EEEEO
#5. ЕЕEEП
#6. EEEEP
#7. EEEET
#8. ЕEEEb
#Под каким номером в списке стоит последнее слово с нечётным номером, которое не начинается с буквы и содержит ровно две буквы К?

from itertools import product

for i, x in enumerate(product(sorted('компьютер'),repeat=5), 1):
    if i % 2 and x[0] != 'ь' and x. count('к') == 2:
        print(i)

#(Е. Усов) Леся составляет новые предложения перестановкой букв и символов из предложения ХОЧУ В ВУЗ.
#  При этом она не любит слова, начинающиеся с буквы У. Предложением это несколько слов, разделённых между собой пробелами. 
# Слова не обязательно должны быть осмысленными словами русского языка. Сколько различных новых предложений может составить Леся?

from itertools import permutations

k = set()
for w in permutations('хочу в вуз'):
    word = ''.join(w)
    if word[0] != ' ' and word[-1] != ' ' and '  ' not in word and word[0] != 'у' and ' у' not in word:  
        k.add(word)
print(len(k)-1)


#*Добрыня составляет коды из букв, входящих в слово ДОБРЫНЯ.
#  Код должен состоять из 6 букв, буквы в коде не должны повторяться, согласных в коде должно быть больше, чем гласных, две гласные буквы нельзя ставить рядом.
#  Сколько различных кодов может составить Добрыня?

from itertools import permutations

k = 0
for w in permutations('добрьян', r = 6):
    s = ''
    for c in w:
        s += 's' if c in 'дбрн' else 'g'
    if s.count('s') > s.count('g') and 'gg' not in s:
        k += 1
print(k)

#Сколько существует чисел, девятеричная запись которых состоит из шести цифр, не начинается с нечётных цифр, не оканчивается цифрами 2 и 3 и содержит не менее двух цифр 1?


from itertools import product

k = 0 
for x in product('012345678', repeat=6):
    if x[0] not in '013579' and x[-1] not in '23' and x. count('1') >= 2:
        k += 1
print(k)


#Определите количество пятизначных чисел, записанных в девятеричной системе счисления,
#  которые не начинаются с нечётных цифр, не оканчиваются цифрами 1 или 8, а также содержат в своей записи не более одной цифры 3.

from itertools import product

k = 0 
for x in product('012345678', repeat=5):
    if x[0] not in '01357' and x[-1] not in '18' and x. count('3') < 2:
        k += 1
print(k)

#Определите количество 12-ричных пятизначных чисел, в записи которых ровно одна цифра 7 и не более трёх цифр с числовым значением, превышающим 8.

from itertools import product
k = 0
for x in product('0123456789ab', repeat=5):
    if x[0] != '0' and x.count('7') == 1 and len([i for i in x if i in '9ab'])<4:
        k += 1
print(k)

#Сколько существует чисел, делящихся на 5, десятичная запись которых содержит 5 цифр, причём все цифры различны и никакие две чётные и две нечётные цифры не стоят рядом.

from itertools import permutations

k = 0
for x in permutations('0123456789', r=5):
    numd = ''.join(x)
    if numd[0] != '0' and numd [-1] in '05' \
        and all(int(numd[i])%2 != int(numd[i+1])%2 for i in range(len(numd)-1)):
        k += 1
print(k)
